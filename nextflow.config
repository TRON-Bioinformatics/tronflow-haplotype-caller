/*
 * -------------------------------------------------
 *  TRON-Bioinformatics/tronflow-haplotype-caller Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

profiles {
  conda { params.enable_conda = true }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  test {
    params.reference = "$baseDir/test_data/ucsc.hg19.minimal.fasta"
    params.intervals = "$baseDir/test_data/intervals.minimal.bed"
    params.dbsnp = "$baseDir/test_data/gnomad.minimal.vcf.gz"
    params.hapmap = "$baseDir/test_data/gnomad.minimal.vcf.gz"
    params.thousand_genomes = "$baseDir/test_data/gnomad.minimal.vcf.gz"
    params.memory_haplotype_caller = "2g"
    params.cpus_haplotype_caller = 1
    params.memory_filter = "2g"
    params.cpus_filter = 1
    timeline.enabled = false
    report.enabled = false
    trace.enabled = false
    dag.enabled = false
  }
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

VERSION = '0.3.0'
DOI = 'https://zenodo.org/badge/latestdoi/437462852'

manifest {
  name = 'TRON-Bioinformatics/tronflow-haplotype-caller'
  author = 'Pablo Riesgo-Ferreiro'
  homePage = 'https://github.com/TRON-Bioinformatics/tronflow-haplotype-caller'
  description = 'GATKs Haplotype Caller best practices workflow for germline variant calling'
  mainScript = 'main.nf'
  nextflowVersion = '>=19.10.0'
  version = VERSION
  doi = DOI
}

params.help_message = """
TronFlow HaplotypeCaller v${VERSION} ${DOI}

Usage:
    nextflow run tron-bioinformatics/tronflow-haplotype-caller -profile conda --input_files input_files \
    --reference reference.fasta \
    --dbsnp dbsnp.vcf \
    --thousand_genomes 1000g.vcf \
    --hapmap hapmap.vcf

Input:
    * input_files: the path to a tab-separated values file containing in each row the sample name, tumor bam and normal bam
    The input file does not have header!
    Example input file:
    name1	bam_file
    name2	bam_file_2
    * reference: path to the FASTA genome reference (indexes expected *.fai, *.dict)
    * dbsnp: path to the dbSNP resource (not required if --skip_vqsr)
    * thousand_genomes: path to the 1000 genomes + Omni resource as provided in the GATK bundle (not required if --skip_vqsr)
    * hapmap: path to the HapMap resource as provided in the GATK bundle (not required if --skip_vqsr)

Optional input:
    * input_bam: the one or more comma separated BAM files (alternative input to --input_files)
    * input_name: the sample name (alternative input to --input_files)
    * ploidy: use this parameter to provide the ploidy of the sample (default: 2)
    * skip_vqsr: skips the Variant Quality Score Recalibration. The variant calls have higher quality but it requires resources not available for all organisms
    * intervals: path to a BED file containing the regions to analyse
    * output: the folder where to publish output
    * memory_haplotype_caller: the ammount of memory used by HaplotypeCaller (default: 16g)
    * cpus_haplotype_caller: the number of CPUs used by HaplotypeCaller (default: 2)
    * memory_filter: the ammount of memory used by the filter pipeline (default: 16g)
    * cpus_filter: the number of CPUs used by the filter pipeline (default: 2)

Output:
    * Output VCF
    * Other intermediate files
    """
